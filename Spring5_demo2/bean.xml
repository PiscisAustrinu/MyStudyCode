<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

<!--   开启组件扫描
       1、如果扫描多个包，多个包用逗号隔开
       2、扫描包上层目录-->
       <context:component-scan base-package="com.Ylb.Spring5"/>

<!--       开启Aspect 生成代理对象-->
       <aop:aspectj-autoproxy/>

<!--       示例
              include-filter 设置哪些内容进行扫描
              exclude-filter 设置哪些内容不进行扫描
              -->
<!--       <context:component-scan base-package="com.Ylb.Spring5" use-default-filters="false">-->
<!--              <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
<!--              <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>-->
<!--&lt;!&ndash;              根据类的类型进行过滤&ndash;&gt;-->
<!--              <context:exclude-filter type="assignable" expression="com.Ylb.Spring5.Test.TestDemo"/>-->
<!--&lt;!&ndash;              根据正则表达式进行过滤&ndash;&gt;-->
<!--              <context:exclude-filter type="regex" expression="com.Ylb.Spring5.Test.*"/>-->
<!--&lt;!&ndash;              根据AspectJ表达式过滤&ndash;&gt;-->
<!--              <context:exclude-filter type="aspectj" expression="com.Ylb..*TestDemo"/>-->
<!--&lt;!&ndash;              自定义过滤器的配置&ndash;&gt;-->
<!--              <context:exclude-filter type="custom" expression="com.Ylb.Spring5.customFilter.MyTypeFilter"/>-->
<!--       </context:component-scan>-->

       
<!--       配置Map类型Bean-->
       <bean id="annoMap1" class="com.Ylb.Spring5.Anno.Anno"/>
       <bean id="annoMap2" class="com.Ylb.Spring5.Anno.Anno"/>
<!--       配置Set类型Bean-->
       <bean id="annoSet1" class="com.Ylb.Spring5.Anno.Anno"/>
       <bean id="annoSet2" class="com.Ylb.Spring5.Anno.Anno"/>

<!--       配置数组类型Bean-->
       <bean id="annos1" class="com.Ylb.Spring5.Anno.Anno"/>
       <bean id="annos2" class="com.Ylb.Spring5.Anno.Anno"/>

       <bean id="autowired" class="com.Ylb.Spring5.Anno.Autowired">

              <property name="annos">
                     <array>
                            <ref bean="annos1"/>
                            <ref bean="annos2"/>
                     </array>
              </property>
              <property name="annoSet">
                     <set>
                            <ref bean="annoSet1"/>
                            <ref bean="annoSet2"/>
                     </set>
              </property>
              <property name="annoMap">
                     <map>
                            <entry key="annoMap1" value-ref="annoMap1"/>
                            <entry key="annoMap2" value-ref="annoMap2"/>
                     </map>
              </property>
       </bean>


<!--&lt;!&ndash;引入外部属性文件&ndash;&gt;-->
<!--       <context:property-placeholder location="jdbc.properties"/>-->
<!--&lt;!&ndash;       数据库连接池&ndash;&gt;-->
<!--       <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">-->
<!--              <property name="driverClassName" value="${prop.driverClass}"/>-->
<!--              <property name="url" value="${prop.url}"/>-->
<!--              <property name="username" value="${prop.userName}"/>-->
<!--              <property name="password" value="${prop.password}"/>-->
<!--       </bean>-->
       <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
              <property name="url" value="jdbc:mysql://localhost:3306/jdbctemplate"/>
              <property name="username" value="root"/>
              <property name="password" value="520227"/>
              <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
       </bean>

<!--       创建JdbcTemplate对象-->
       <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
              <property name="dataSource" ref="dataSource"/>
       </bean>

<!--       配置事务管理器-->
       <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
<!--          注入数据源-->
              <property name="dataSource" ref="dataSource"/>
       </bean>

<!--       开启事务注解-->
       <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>